@model IEnumerable<Inventory.Models.Entity.Edificio>
@using NonFactors.Mvc.Grid;

@{
    ViewBag.Title = "Listado de edificios";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Listado de edificios</h2>

<p>
    @Html.ActionLink("Agregar Edificio", "Create", null, new { @class = "btn btn-success" })
    <a class="btn btn-info" href="@(Url.Action("ExportIndex", "Edificios") + "?" + ViewContext.HttpContext.Request.QueryString)">Exportar</a>
</p>

@(Html
                .Grid(Model)
                .Build(columns =>
                {
                    columns.Add(model => model.Codigo).Titled("Codigo");
                    columns.Add(model => model.Direccion).Titled("Dirección");
                    columns.Add(model => model.Fecha).Titled("Fecha Alta").Formatted("{0:d}").Filterable(false);
                    columns.Add(model => model.FechaCumplido).Titled("Fecha Cumplido").Formatted("{0:d}").Filterable(false);
                    columns.Add(model => model.EstadoDesc).Titled("Estado").WithDefaultFilterMethod("starts-with")
            .WithFilterOptions(
                new[]
                {
                    new SelectListItem(),
                    new SelectListItem { Value = "PreCumplido", Text = "Pre-Cumplido" },
                    new SelectListItem { Value = "Cumplido", Text = "Cumplido" }
                }
            );
                    columns.Add(model => model.CantidadMateriales).Titled("Cantidad Materiales").Sortable(true).InitialSort(GridSortOrder.Desc);
                    columns.Add(m => Html.ActionLink("Asociar", "associate", new { id = m.Id }, new { @class = "btn btn-success btn-xs" }));
                    columns.Add(m => Html.ActionLink("Detalle", "Details", new { id = m.Id }, new { @class = "btn btn-info btn-xs" }));
                    columns.Add(m => Html.ActionLink("Editar", "Edit", new { id = m.Id }, new { @class = "btn btn-primary btn-xs" }));
                    columns.Add(m => Html.ActionLink("Eliminar", "Delete", new { id = m.Id }, new { @class = "btn btn-danger btn-xs" }));

                })
                .WithFooter("_GridFooter")
                .WithFilterMode(GridFilterMode.FilterRow)
                .Empty("No se encontraron datos.")
                .Filterable()
                .Sortable()
                .Pageable()

)